name: Docker Image CI

on:
  push:
    branches: [preprod]
    tags: ["v*.*.*"]
  pull_request:
    branches: [preprod]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      # - name: Install cosign
      #   if: github.event_name != 'pull_request'
      #   uses: sigstore/cosign-installer@v3

      - name: Generate build ID
        id: prep
        run: |
          branch="${GITHUB_REF##*/}"
          timestamp=$(date +%F.%H%M)
          reverse_commit_hash=$(git rev-parse --short HEAD)
          echo "BUILD_ID=${branch}.${timestamp}.${reverse_commit_hash}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64, linux/arm64

      # https://github.com/docker/login-action
      - name: Log in to GitHub Container Registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.prep.outputs.BUILD_ID }}
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan the Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: |
            ${{ env.IMAGE_NAME }}:${{ steps.prep.outputs.BUILD_ID }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true

      - name: Push the Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.prep.outputs.BUILD_ID }}
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Sign the published Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     TAGS: ${{ steps.meta.outputs.tags }}
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
